[build-system]
requires = ["setuptools >= 75.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lootscraper"
version = "1.14.3"
description = "RSS feeds and Telegram bot for free game and loot offers."
requires-python = ">=3.12.7"
readme = "README.md"
authors = [{ name = "Eiko Wagenknecht", email = "git@eiko-wagenknecht.de" }]
license = { text = "CC-BY-NC-SA-4.0" }
dependencies = [
    "alembic==1.14.0",
    "feedgen==1.0.0",
    "humanize==4.11.0",
    "httpx==0.28.0",
    "python-telegram-bot[rate-limiter]==21.8",
    "playwright==1.49.0",
    "SQLAlchemy==2.0.36",
    "Unidecode==1.3.8",
    "xvfbwrapper==0.2.9",
    "jinja2==3.1.4",
    "schedule==1.2.2",
    "pytz==2024.2",
]

[project.scripts]
lootscraper = "lootscraper.main:main"

[dependency-groups]
dev = [
    "ruff==0.8.1",
    "mypy==1.13.0",
    "scalene==1.5.48",
    "pytest==8.3.4",
    "setuptools==75.6.0",
    "wheel==0.45.1",
]

[project.urls]
Homepage = "https://github.com/eikowagenknecht/lootscraper"
Issues = "https://github.com/eikowagenknecht/lootscraper/issues"

[tool.setuptools.package-data]
lootscraper = ["data/config.default.toml"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "pip install uv && uv build"

[tool.semantic_release.branches.main]
match = "(main)"
prerelease = false

[tool.semantic_release.branches.next]
match = "(next)"
prerelease = true
prerelease_token = "beta"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "revert",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.ruff]
# See rules here: https://beta.ruff.rs/docs/rules/

[tool.ruff.lint]
select = [
    "F",
    "W",
    "B",
    "E",
    "I",
    "N",
    "PLC",
    "PLE",
    # "PLR",
    "PLW",
    "TRY",
    "PTH",
    "TID",
    "SIM",
    "ARG",
    "TC",
    "RET",
    "UP",
    "YTT",
    "SLF",
    "ANN",
    "S",
    "A",
    "COM",
    "DTZ",
    "C4",
    "ISC",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "INP",
    "ICN",
    "D",   # Pydocstyle
]

ignore = [
    "S101",   # Use of assert detected
    "TRY003", # Long messages in exceptions
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in __init__
    "D401",   # First line should be in imperative mood
    "D205",   # 1 blank line required between summary line and description
    # "COM812", # Missing trailing comma (incompatible with ruff format)
    # "ISC001", # Single line concatenation (incompatible with ruff format)
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
line-ending = "lf"
preview = true

[tool.mypy]
python_version = "3.12.7"
# ignore imports from 3rd party libraries where no stubs are available
ignore_missing_imports = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
# disallow_any_unimported = true
# disallow_any_expr = true
disallow_any_generics = true
# plugins = "sqlalchemy.ext.mypy.plugin" # Needed for SQLAlchemy 1.4 only
