common:
  # Path is /data if it exists (Docker), otherwise the relative directory data
  databaseFile: loot.db
  feedFilePrefix: lootscraper
  logFile: lootscraper.log
  # One of: ERROR, WARN, INFO, HTTP, VERBOSE, DEBUG, SILLY
  logLevel: INFO

expert:
  # Output all database queries to the console
  dbEcho: false
  # Timeout for web requests (in seconds). Increase if you have slow internet.
  webTimeoutSeconds: 5

scraper:
  # TODO: Either have just a list of scrapers (AMAZON_GAME, ...) or a list of sources (AMAZON, APPLE, ...) and types (GAME, LOOT),
  # But not mixed like this
  offerSources:
    - AMAZON_GAME
    - AMAZON_LOOT
    - APPLE
    - EPIC
    - GOG
    - GOOGLE
    - HUMBLE
    - ITCH
    - STEAM
    - UBISOFT
  offerTypes:
    - GAME
    - LOOT
  offerDurations:
    - ALWAYS
    - CLAIMABLE
    - TEMPORARY
  infoSources:
    - STEAM
    - IGDB

actions:
  scrapeInfo: true
  generateFeed: false
  uploadToFtp: false
  telegramBot: false

telegram:
  # Telegram bot token
  accessToken: ""
  # Chat ID for the developer
  developerChatId: 0
  # User ID for the admin
  adminUserId: 0
  # One of: DEBUG, INFO, WARNING, ERROR, DISABLED
  logLevel: ERROR

igdb:
  # Twitch API client ID
  clientId: ""
  # Twitch API client secret
  clientSecret: ""

ftp:
  # Settings for the TLS FTP connection
  host: ftp.example.com
  user: user
  password: password

feed:
  authorName: John Doe
  authorEmail: mail@example.com
  authorWeb: https://example.com
  urlPrefix: https://feed.example.com/
  urlAlternate: https://example.com/loot
  idPrefix: https://example.com/loot/
