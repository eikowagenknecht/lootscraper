common:
  # The filename inside "/data" for Docker, otherwise in the relative directory "./data".
  databaseFile: loot.db
  # Prefix for the feed file name. "lootscraper" will result in "lootscraper_amazon_games.xml" etc.
  feedFilePrefix: lootscraper
  # The log file name. Do not include the file extension.
  logFile: lootscraper-%DATE%
  # One of: ERROR, WARN, INFO, HTTP, VERBOSE, DEBUG, SILLY
  logLevel: INFO

browser:
  # Timeout for web requests (in seconds). Increase if you have slow internet.
  timeoutSeconds: 5
  # Run the browser in headless mode. Must be set to false for Epic Games to work.
  headless: true
  # Load images while browsing (increases resource usage).
  loadImages: false

# The actions to perform. Set to false to disable.
# You need to enable one or more actions to do anything.
actions:
  # Scrape offers from the sources (enable / disable below). This is the main action.
  scrapeOffers: false
  # Scrape additional information about the offers (enable / disable sources below).
  scrapeInfo: false
  # Generate HTML and RSS feed files.
  generateFeed: false
  # Upload the feed files to an FTP server.
  uploadToFtp: false
  # Enable the Telegram bot. Needs credentials, see below.
  telegramBot: false

scraper:
  # The sources to scrape offers from. Comment out to disable.
  enabledScrapers:
    # Amazon - Games
    - AmazonGames
    # Amazon - Loot
    - AmazonLoot
    # Apple
    - AppleGames
    # Epic (Web or API, enable only one)
    - EpicGamesApi
    # - EpicGamesWeb
    # Epic Mobile Game Stores
    - EpicMobileAndroid
    - EpicMobileIos
    # GOG - Games
    - GogGames
    # GOG - Always Free
    - GogAlwaysFree
    # Google
    - GoogleGames
    # Humble Store
    - HumbleGames
    # Itch.io
    - ItchGames
    # Steam - Games
    - SteamGames
    # Steam - Loot
    - SteamLoot
    # Ubisoft Connect
    - UbisoftGames
  # The sources to scrape additional information from. Comment out to disable.
  infoSources:
    # Steam
    - STEAM
    # IGDB
    # - IGDB

igdb:
  # Twitch API client ID
  clientId: ""
  # Twitch API client secret
  clientSecret: ""

feed:
  authorName: "John Doe"
  authorEmail: "mail@example.com"
  authorWeb: "https://example.com"
  urlPrefix: "https://feed.example.com/"
  urlAlternate: "https://example.com/loot"
  idPrefix: "https://example.com/loot/"

# Settings for the TLS FTP connection
ftp:
  host: "ftp.example.com"
  user: "user"
  password: "password"

telegram:
  # Telegram bot token
  accessToken: ""
  # User ID for the admin
  botOwnerUserId: 0
  # Chat (can be a group, then it starts with a minus sign) where logs will be sent to
  # Set to 0 to disable logging.
  botLogChatId: 0
  # Which errors to send by Telegram notification to the log chat.
  # One of: ERROR, WARN, INFO, HTTP, VERBOSE, DEBUG, SILLY
  logLevel: ERROR
  # Drop all messages that have been sent while the bot was offline.
  dropPendingMessages: false
